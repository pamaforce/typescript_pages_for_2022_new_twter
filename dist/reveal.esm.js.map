{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Element.matches with IE support.\r\n *\r\n * @param {HTMLElement} target The element to match\r\n * @param {String} selector The CSS selector to match\r\n * the element against\r\n *\r\n * @return {Boolean}\r\n */\r\nexport const matches = ( target, selector ) => {\r\n\r\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\r\n\r\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closest = ( target, selector ) => {\r\n\r\n\t// Native Element.closest\r\n\tif( typeof target.closest === 'function' ) {\r\n\t\treturn target.closest( selector );\r\n\t}\r\n\r\n\t// Polyfill\r\n\twhile( target ) {\r\n\t\tif( matches( target, selector ) ) {\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\ttarget = target.parentNode;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}\r\n\r\nconst fileExtensionToMimeMap = {\r\n\t'mp4': 'video/mp4',\r\n\t'm4a': 'video/mp4',\r\n\t'ogv': 'video/ogg',\r\n\t'mpeg': 'video/mpeg',\r\n\t'webm': 'video/webm'\r\n}\r\n\r\n/**\r\n * Guess the MIME type for common file formats.\r\n */\r\nexport const getMimeTypeFromFile = ( filename='' ) => {\r\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\r\n}","const UA = navigator.userAgent;\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\nimport fitty from 'fitty';\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// Enable inline video playback in mobile Safari\r\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\r\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\r\n\t\t\t}\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\t// base64\r\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// URL(s)\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\r\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\r\n\t\t\t\t\t\t}).join( ',' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Enable inline playback in mobile Safari\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Mute is required for video to play when using\r\n\t\t\t\t\t// swipe gestures to navigate since they don't\r\n\t\t\t\t\t// count as direct user actions :'(\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\r\n\t\t\t\t\t\tif( type ) {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.layout( slide );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JS-dependent layout helpers for the scope.\r\n\t */\r\n\tlayout( scopeElement ) {\r\n\r\n\t\t// Autosize text with the r-fit-text class based on the\r\n\t\t// size of its container. This needs to happen after the\r\n\t\t// slide is visible in order to measure the text.\r\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\r\n\t\t\tfitty( element, {\r\n\t\t\t\tminSize: 24,\r\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\r\n\t\t\t\tobserveMutations: false,\r\n\t\t\t\tobserveWindow: false\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = 'h.v';\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = 'c';\r\n\t\t\t}\r\n\r\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\r\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'c/t':\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\r\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\r\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tconst element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\tconst data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\r\n\t\t};\r\n\r\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = data.backgroundColor;\r\n\r\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\r\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tconst rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tif( v < indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indices.v ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\r\n\t\t\t\t}\r\n\t\t\t}, this );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}\r\n","\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n// Counter used to generate unique IDs for auto-animated elements\r\nlet autoAnimateCounter = 0;\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\r\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\r\n\r\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\r\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\r\n\t\t// physically latter slide (independent of slide direction)\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \r\n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\r\n\r\n\t\t\t// If the from-slide is hidden because it has moved outside\r\n\t\t\t// the view distance, we need to temporarily show it while\r\n\t\t\t// measuring\r\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\r\n\t\t\t\tif( style.property === 'line-height' ) {\r\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( isNaN(value) ) {\r\n\t\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Eplicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\t\t\t// Disable scale transformations on text nodes, we transition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( matches( pair.from, textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considerd\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}\r\n","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\r\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keypress' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyPress( event ) {\r\n\r\n\t\t// Check if the pressed key is question mark\r\n\t\tif( event.shiftKey && event.charCode === 63 ) {\r\n\t\t\tthis.Reveal.toggleHelp();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\r\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif ( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\t// The minimum number of milliseconds that must pass between\r\n\t// calls to history.replaceState\r\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.replaceStateTimestamp = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide indices for the given hash link.\r\n\t *\r\n\t * @param {string} [hash] the hash string that we want to\r\n\t * find the indices for\r\n\t *\r\n\t * @returns slide indices or null\r\n\t */\r\n\tgetIndicesFromHash( hash=window.location.hash ) {\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet name = hash.replace( /^#\\/?/, '' );\r\n\t\tlet bits = name.split( '/' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet element;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\tif( element ) {\r\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst config = this.Reveal.getConfig();\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { h, v, f };\r\n\t\t}\r\n\r\n\t\t// The hash couldn't be parsed or no matching named link was found\r\n\t\treturn null\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tconst currentIndices = this.Reveal.getIndices();\r\n\t\tconst newIndices = this.getIndicesFromHash();\r\n\r\n\t\tif( newIndices ) {\r\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\r\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If no new indices are available, we're trying to navigate to\r\n\t\t// a slide hash that does not exist\r\n\t\telse {\r\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\r\n\t\t\tlet hash = this.getHash();\r\n\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not avaialble.\r\n\t\t\tif( config.history ) {\r\n\t\t\t\twindow.location.hash = hash;\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\t// If the hash is empty, don't add it to the URL\r\n\t\t\t\tif( hash === '/' ) {\r\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treplaceState( url ) {\r\n\r\n\t\twindow.history.replaceState( null, null, url );\r\n\t\tthis.replaceStateTimestamp = Date.now();\r\n\r\n\t}\r\n\r\n\tdebouncedReplaceState( url ) {\r\n\r\n\t\tclearTimeout( this.replaceStateTimeout );\r\n\r\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\r\n\t\t\tthis.replaceState( url );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.unbind();\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tlet scale = this.Reveal.getProgress();\r\n\r\n\t\t\t// Don't fill the progress bar if there's only one slide\r\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\r\n\t\t\t\tscale = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slides = this.Reveal.getSlides();\r\n\t\tlet slidesTotal = slides.length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\r\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\r\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\r\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\r\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registed plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all regisered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\r\n\t\t\tif( typeof plugin.destroy === 'function' ) {\r\n\t\t\t\tplugin.destroy();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.registeredPlugins = {};\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class Print {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tasync setupPDF() {\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tconst slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\r\n\t\tlet presentationBackground;\r\n\t\tif( viewportElement ) {\r\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\r\n\t\t\tif( viewportStyles && viewportStyles.background ) {\r\n\t\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Batch scrollHeight access to prevent layout thrashing\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\r\n\r\n\t\tconst pages = [];\r\n\t\tconst pageContainer = slides[0].parentNode;\r\n\t\tlet slideNumber = 1;\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tslides.forEach( function( slide, index ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\r\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement( 'div' );\r\n\t\t\t\tpages.push( page );\r\n\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\r\n\t\t\t\t// Copy the presentation-wide background to each individual\r\n\t\t\t\t// page when printing\r\n\t\t\t\tif( presentationBackground ) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tconst notesSpacing = 8;\r\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpages.push( notesElement );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\r\n\r\n\t\t\t\t\t\t// Inject unique page numbers for fragments\r\n\t\t\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\r\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\r\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpages.push( clonedPage );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this instance is being used to print a PDF.\r\n\t */\r\n\tisPrintingPDF() {\r\n\r\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\r\n\r\n\t}\r\n\r\n}\r\n","import { isAndroid } from '../utils/device.js'\r\nimport { matches } from '../utils/util.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\t// Prevent accidental swipes when scrubbing timelines\r\n\t\tif( matches( target, 'video, audio' ) ) return true;\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { closest } from '../utils/util.js'\r\n\r\n/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = closest( event.target, '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing of speaker notes\r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\r\n\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. With <aside class=\"notes\"> elements inside the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using <aside class=\"notes\"> elements\r\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\r\n\t\tif( notesElements ) {\r\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'focused', we will only capture keyboard events\r\n\t// for embedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\r\n\tshowHiddenSlides: false,\r\n\r\n\t// Global override for autoplaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Print from './controllers/print.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '4.4.0';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config = {},\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tprint = new Print( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\r\n\r\n\t\t// Compose our config object in order of increasing precedence:\r\n\t\t// 1. Default reveal.js options\r\n\t\t// 2. Options provided via Reveal.configure() prior to\r\n\t\t//    initialization\r\n\t\t// 3. Options passed to the Reveal constructor\r\n\t\t// 4. Options passed to Reveal.initialize\r\n\t\t// 5. Query params\r\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Remove slides hidden with data-visibility\r\n\t\tremoveHiddenSlides();\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Adds bindings for fullscreen mode\r\n\t\tsetupFullscreen();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t\t// Special setup and config is required when printing to PDF\r\n\t\tif( print.isPrintingPDF() ) {\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t// measurements to be accurate\r\n\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\tprint.setupPDF();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.addEventListener( 'load', () => {\r\n\t\t\t\t\tprint.setupPDF();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all slides with data-visibility=\"hidden\". This\r\n\t * is done right before the rest of the presentation is\r\n\t * initialized.\r\n\t *\r\n\t * If you want to show all hidden slides, initialize\r\n\t * reveal.js with showHiddenSlides set to true.\r\n\t */\r\n\tfunction removeHiddenSlides() {\r\n\r\n\t\tif( !config.showHiddenSlides ) {\r\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\r\n\t\t\t\tslide.parentNode.removeChild( slide );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * After entering fullscreen we need to force a layout to\r\n\t * get our presentations to scale correctly. This behavior\r\n\t * is inconsistent across browsers but a force layout seems\r\n\t * to normalize it.\r\n\t */\r\n\tfunction setupFullscreen() {\r\n\r\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\t// Expose our configured slide dimensions as custom props\r\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\r\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uninitializes reveal.js by undoing changes made to the\r\n\t * DOM and removing all event listeners.\r\n\t */\r\n\tfunction destroy() {\r\n\r\n\t\tremoveEventListeners();\r\n\t\tcancelAutoSlide();\r\n\t\tdisablePreviewLinks();\r\n\r\n\t\t// Destroy controllers\r\n\t\tnotes.destroy();\r\n\t\tfocus.destroy();\r\n\t\tplugins.destroy();\r\n\t\tpointer.destroy();\r\n\t\tcontrols.destroy();\r\n\t\tprogress.destroy();\r\n\t\tbackgrounds.destroy();\r\n\t\tslideNumber.destroy();\r\n\r\n\t\t// Remove event listeners\r\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\r\n\t\twindow.removeEventListener( 'load', layout, false );\r\n\r\n\t\t// Undo DOM changes\r\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\r\n\t\tif( dom.statusElement ) dom.statusElement.remove();\r\n\r\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\r\n\r\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\r\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\r\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\r\n\r\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\r\n\r\n\t\tdom.slides.style.removeProperty( 'width' );\r\n\t\tdom.slides.style.removeProperty( 'height' );\r\n\t\tdom.slides.style.removeProperty( 'zoom' );\r\n\t\tdom.slides.style.removeProperty( 'left' );\r\n\t\tdom.slides.style.removeProperty( 'top' );\r\n\t\tdom.slides.style.removeProperty( 'bottom' );\r\n\t\tdom.slides.style.removeProperty( 'right' );\r\n\t\tdom.slides.style.removeProperty( 'transform' );\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\r\n\t\t\tslide.style.removeProperty( 'display' );\r\n\t\t\tslide.style.removeProperty( 'top' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t\treturn event;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1\r\n\t\t\t\tif( scale === 1 ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: config.width,\r\n\t\t\theight: config.height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [origin] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, origin ) {\r\n\r\n\t\t// Dispatch an event before hte slide\r\n\t\tconst slidechange = dispatchEvent({\r\n\t\t\ttype: 'beforeslidechange',\r\n\t\t\tdata: {\r\n\t\t\t\tindexh: h === undefined ? indexh : h,\r\n\t\t\t\tindexv: v === undefined ? indexv : v,\r\n\t\t\t\torigin\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Abort if this slide change was prevented by an event listener\r\n\t\tif( slidechange.defaultPrevented ) return;\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\r\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t\tautoAnimateTransition = true;\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\r\n\t\t\t}\r\n\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidechanged',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tpreviousSlide,\r\n\t\t\t\t\tcurrentSlide,\r\n\t\t\t\t\torigin\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\r\n\t\t// from triggering layout mid-frame\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\t\t});\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tfragments.sortAll();\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle( slides = getHorizontalSlides() ) {\r\n\r\n\t\tslides.forEach( ( slide, i ) => {\r\n\r\n\t\t\t// Insert the slide next to a randomly picked sibling slide\r\n\t\t\t// slide. This may cause the slide to insert before itself,\r\n\t\t\t// but that's not an issue.\r\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\r\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\r\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\r\n\t\t\t}\r\n\r\n\t\t\t// Randomize the order of vertical slides (if there are any)\r\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\r\n\t\t\tif( verticalSlides.length ) {\r\n\t\t\t\tshuffle( verticalSlides );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = print.isPrintingPDF();\r\n\t\tlet loopedForwards = false;\r\n\t\tlet loopedBackwards = false;\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\r\n\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t\tloopedBackwards = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\r\n\t\t\t\telement.classList.remove( 'past' );\r\n\t\t\t\telement.classList.remove( 'present' );\r\n\t\t\t\telement.classList.remove( 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Update the visibility of fragments when a presentation loops\r\n\t\t\t\t// in either direction\r\n\t\t\t\telse if( i === index && config.fragments ) {\r\n\t\t\t\t\tif( loopedForwards ) {\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( loopedBackwards ) {\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows all fragment elements within the given contaienr.\r\n\t */\r\n\tfunction showFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\r\n\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all fragment elements within the given contaienr.\r\n\t */\r\n\tfunction hideFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( print.isPrintingPDF() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// availalbe if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t// Select all horizontal slides\r\n\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t// Assume we're not vertical\r\n\t\t\tv = undefined;\r\n\r\n\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\tif( isVertical ) {\r\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\r\n\r\n\t\t\t// When the slide first appears there is no \"current\" fragment so\r\n\t\t\t// we look for a data-autoslide timing on the first fragment\r\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t\t// is divided up into fragments.\r\n\t\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When going backwards and arriving on a stack we start\r\n\t\t\t\t// at the bottom of the stack\r\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown({skipFragments});\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight({skipFragments});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t* Listener for post message events posted to this window.\r\n\t*/\r\n\tfunction onPostMessage( event ) {\r\n\r\n\t\tlet data = event.data;\r\n\r\n\t\t// Make sure we're dealing with JSON\r\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t// Check if the requested method can be found\r\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A global listener for all click events inside of the\r\n\t * .slides container.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onSlidesClicked( event ) {\r\n\r\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\r\n\r\n\t\t// If a hash link is clicked, we find the target slide\r\n\t\t// and navigate to it. We previously relied on 'hashchange'\r\n\t\t// for links like these but that prevented media with\r\n\t\t// audio tracks from playing in mobile browsers since it\r\n\t\t// wasn't considered a direct interaction with the document.\r\n\t\tif( anchor ) {\r\n\t\t\tconst hash = anchor.getAttribute( 'href' );\r\n\t\t\tconst indices = location.getIndicesFromHash( hash );\r\n\r\n\t\t\tif( indices ) {\r\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'fullscreenchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onFullscreenChange( event ) {\r\n\r\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\r\n\t\tif( element === dom.wrapper ) {\r\n\t\t\tevent.stopImmediatePropagation();\r\n\r\n\t\t\t// Timeout to avoid layout shift in Safari\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tReveal.layout();\r\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\r\n\t\t\t}, 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\t\tdestroy,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Preview management\r\n\t\tshowPreview,\r\n\t\thidePreview: closeOverlay,\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns the path to the current slide as represented in the URL\r\n\t\tgetSlidePath: location.getHash.bind( location ),\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tprint,\r\n\t\tfocus,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.isReady = () => false;\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","filename","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","VERSION","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}